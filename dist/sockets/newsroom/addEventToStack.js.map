{"version":3,"sources":["../sockets/newsroom/addEventToStack.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,qCAA+C;AAC/C,yCAA+D;AAC/D,gEAAwC;AAExC,SAAwB,eAAe,CAAC,MAAc;IACpD,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAO,OAAe,EAAE,OAAe,EAAE,KAAe,GAAG,EAAE,GAAE,CAAC,EAAE,EAAE;QAClG,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;QAC9C,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACzC,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5F,IAAI,CAAC,UAAU;YAAE,OAAO,EAAE,CAAC,yCAAyC,CAAC,CAAC;QACtE,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI;YACF,MAAM,CAAC,GAAG,MAAM,wBAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;YAClE,IAAI,CAAC,EAAE;gBACL,MAAM,CAAC,EAAE,CAAC,IAAA,qBAAW,EAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC/D,OAAO;oBACP,OAAO;oBACP,MAAM,EAAE,MAAM,gBAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;iBACxC,CAAC,CAAC;aACJ;YACD,EAAE,EAAE,CAAC;SACN;QAAC,OAAO,GAAG,EAAE;YACZ,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACjB;IACH,CAAC,CAAA,CAAC,CAAC;AACL,CAAC;AAvBD,kCAuBC","file":"addEventToStack.js","sourcesContent":["import { Socket } from 'socket.io';\nimport { Event, Stack, Client } from '@Models';\nimport { StackService, AccessControlService } from '@Services';\nimport getRoomName from './getRoomName';\n\nexport default function addEventToStack(socket: Socket) {\n  socket.on('add event to stack', async (eventId: number, stackId: number, cb: Function = () => {}) => {\n    const { clientId } = socket.handshake.session;\n    const stack = await Stack.findByPk(stackId);\n    if (!stack) return cb('Stack not found');\n    const haveAccess = await AccessControlService.isAllowedToEditEvent(clientId, stack.eventId);\n    if (!haveAccess) return cb('You are not allowed to edit this event.');\n    const event = await Event.findByPk(eventId);\n    if (!event) return cb('Event not found');\n    try {\n      const s = await StackService.addEvent(stackId, eventId, clientId);\n      if (s) {\n        socket.in(getRoomName(stack.eventId)).emit('add event to stack', {\n          eventId,\n          stackId,\n          client: await Client.findByPk(clientId),\n        });\n      }\n      cb();\n    } catch (err) {\n      cb(err.message);\n    }\n  });\n}\n"],"sourceRoot":"../../../src"}